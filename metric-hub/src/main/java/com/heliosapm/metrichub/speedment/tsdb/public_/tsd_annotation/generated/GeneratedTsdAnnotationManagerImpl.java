package com.heliosapm.metrichub.speedment.tsdb.public_.tsd_annotation.generated;

import com.heliosapm.metrichub.speedment.tsdb.public_.tsd_annotation.TsdAnnotation;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;
import java.util.stream.Stream;
import javax.annotation.Generated;

/**
 * The generated base implementation for the manager of every {@link
 * com.heliosapm.metrichub.speedment.tsdb.public_.tsd_annotation.TsdAnnotation}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public abstract class GeneratedTsdAnnotationManagerImpl extends AbstractManager<TsdAnnotation> implements GeneratedTsdAnnotationManager {
    
    private final TableIdentifier<TsdAnnotation> tableIdentifier;
    
    protected GeneratedTsdAnnotationManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("tsdb", "public", "tsd_annotation");
    }
    
    @Override
    public TableIdentifier<TsdAnnotation> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<TsdAnnotation>> fields() {
        return Stream.of(
            TsdAnnotation.ANNID,
            TsdAnnotation.VERSION,
            TsdAnnotation.START_TIME,
            TsdAnnotation.LAST_UPDATE,
            TsdAnnotation.DESCRIPTION,
            TsdAnnotation.NOTES,
            TsdAnnotation.FQNID,
            TsdAnnotation.END_TIME,
            TsdAnnotation.CUSTOM
        );
    }
    
    @Override
    public Stream<Field<TsdAnnotation>> primaryKeyFields() {
        return Stream.of(
            TsdAnnotation.ANNID
        );
    }
}