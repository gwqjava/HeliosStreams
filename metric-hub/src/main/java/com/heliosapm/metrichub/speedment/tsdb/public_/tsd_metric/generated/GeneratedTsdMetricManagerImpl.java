package com.heliosapm.metrichub.speedment.tsdb.public_.tsd_metric.generated;

import com.heliosapm.metrichub.speedment.tsdb.public_.tsd_metric.TsdMetric;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;
import java.util.stream.Stream;
import javax.annotation.Generated;

/**
 * The generated base implementation for the manager of every {@link
 * com.heliosapm.metrichub.speedment.tsdb.public_.tsd_metric.TsdMetric} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public abstract class GeneratedTsdMetricManagerImpl extends AbstractManager<TsdMetric> implements GeneratedTsdMetricManager {
    
    private final TableIdentifier<TsdMetric> tableIdentifier;
    
    protected GeneratedTsdMetricManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("tsdb", "public", "tsd_metric");
    }
    
    @Override
    public TableIdentifier<TsdMetric> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<TsdMetric>> fields() {
        return Stream.of(
            TsdMetric.XUID,
            TsdMetric.VERSION,
            TsdMetric.NAME,
            TsdMetric.CREATED,
            TsdMetric.LAST_UPDATE,
            TsdMetric.DESCRIPTION,
            TsdMetric.DISPLAY_NAME,
            TsdMetric.NOTES,
            TsdMetric.CUSTOM
        );
    }
    
    @Override
    public Stream<Field<TsdMetric>> primaryKeyFields() {
        return Stream.of(
            TsdMetric.XUID
        );
    }
}