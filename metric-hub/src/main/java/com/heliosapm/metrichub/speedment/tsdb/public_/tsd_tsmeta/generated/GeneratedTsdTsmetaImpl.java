package com.heliosapm.metrichub.speedment.tsdb.public_.tsd_tsmeta.generated;

import com.heliosapm.metrichub.speedment.tsdb.public_.tsd_metric.TsdMetric;
import com.heliosapm.metrichub.speedment.tsdb.public_.tsd_tsmeta.TsdTsmeta;
import com.speedment.runtime.core.manager.Manager;
import com.speedment.runtime.core.util.OptionalUtil;
import java.sql.Timestamp;
import java.util.Objects;
import java.util.Optional;
import java.util.OptionalInt;
import java.util.OptionalLong;
import java.util.StringJoiner;
import javax.annotation.Generated;

/**
 * The generated base implementation of the {@link
 * com.heliosapm.metrichub.speedment.tsdb.public_.tsd_tsmeta.TsdTsmeta}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public abstract class GeneratedTsdTsmetaImpl implements TsdTsmeta {
    
    private Long fqnid;
    private int version;
    private String metricUid;
    private String fqn;
    private String tsuid;
    private Timestamp created;
    private Timestamp lastUpdate;
    private Long maxValue;
    private Long minValue;
    private String dataType;
    private String description;
    private String displayName;
    private String notes;
    private String units;
    private Integer retention;
    private String custom;
    
    protected GeneratedTsdTsmetaImpl() {
        
    }
    
    @Override
    public Long getFqnid() {
        return fqnid;
    }
    
    @Override
    public int getVersion() {
        return version;
    }
    
    @Override
    public String getMetricUid() {
        return metricUid;
    }
    
    @Override
    public String getFqn() {
        return fqn;
    }
    
    @Override
    public String getTsuid() {
        return tsuid;
    }
    
    @Override
    public Timestamp getCreated() {
        return created;
    }
    
    @Override
    public Timestamp getLastUpdate() {
        return lastUpdate;
    }
    
    @Override
    public OptionalLong getMaxValue() {
        return OptionalUtil.ofNullable(maxValue);
    }
    
    @Override
    public OptionalLong getMinValue() {
        return OptionalUtil.ofNullable(minValue);
    }
    
    @Override
    public Optional<String> getDataType() {
        return Optional.ofNullable(dataType);
    }
    
    @Override
    public Optional<String> getDescription() {
        return Optional.ofNullable(description);
    }
    
    @Override
    public Optional<String> getDisplayName() {
        return Optional.ofNullable(displayName);
    }
    
    @Override
    public Optional<String> getNotes() {
        return Optional.ofNullable(notes);
    }
    
    @Override
    public Optional<String> getUnits() {
        return Optional.ofNullable(units);
    }
    
    @Override
    public OptionalInt getRetention() {
        return OptionalUtil.ofNullable(retention);
    }
    
    @Override
    public Optional<String> getCustom() {
        return Optional.ofNullable(custom);
    }
    
    @Override
    public TsdTsmeta setFqnid(Long fqnid) {
        this.fqnid = fqnid;
        return this;
    }
    
    @Override
    public TsdTsmeta setVersion(int version) {
        this.version = version;
        return this;
    }
    
    @Override
    public TsdTsmeta setMetricUid(String metricUid) {
        this.metricUid = metricUid;
        return this;
    }
    
    @Override
    public TsdTsmeta setFqn(String fqn) {
        this.fqn = fqn;
        return this;
    }
    
    @Override
    public TsdTsmeta setTsuid(String tsuid) {
        this.tsuid = tsuid;
        return this;
    }
    
    @Override
    public TsdTsmeta setCreated(Timestamp created) {
        this.created = created;
        return this;
    }
    
    @Override
    public TsdTsmeta setLastUpdate(Timestamp lastUpdate) {
        this.lastUpdate = lastUpdate;
        return this;
    }
    
    @Override
    public TsdTsmeta setMaxValue(Long maxValue) {
        this.maxValue = maxValue;
        return this;
    }
    
    @Override
    public TsdTsmeta setMinValue(Long minValue) {
        this.minValue = minValue;
        return this;
    }
    
    @Override
    public TsdTsmeta setDataType(String dataType) {
        this.dataType = dataType;
        return this;
    }
    
    @Override
    public TsdTsmeta setDescription(String description) {
        this.description = description;
        return this;
    }
    
    @Override
    public TsdTsmeta setDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    @Override
    public TsdTsmeta setNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    @Override
    public TsdTsmeta setUnits(String units) {
        this.units = units;
        return this;
    }
    
    @Override
    public TsdTsmeta setRetention(Integer retention) {
        this.retention = retention;
        return this;
    }
    
    @Override
    public TsdTsmeta setCustom(String custom) {
        this.custom = custom;
        return this;
    }
    
    @Override
    public TsdMetric findMetricUid(Manager<TsdMetric> foreignManager) {
        return foreignManager.stream().filter(TsdMetric.XUID.equal(getMetricUid())).findAny().orElse(null);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("fqnid = " + Objects.toString(getFqnid()));
        sj.add("version = " + Objects.toString(getVersion()));
        sj.add("metricUid = " + Objects.toString(getMetricUid()));
        sj.add("fqn = " + Objects.toString(getFqn()));
        sj.add("tsuid = " + Objects.toString(getTsuid()));
        sj.add("created = " + Objects.toString(getCreated()));
        sj.add("lastUpdate = " + Objects.toString(getLastUpdate()));
        sj.add("maxValue = " + Objects.toString(OptionalUtil.unwrap(getMaxValue())));
        sj.add("minValue = " + Objects.toString(OptionalUtil.unwrap(getMinValue())));
        sj.add("dataType = " + Objects.toString(OptionalUtil.unwrap(getDataType())));
        sj.add("description = " + Objects.toString(OptionalUtil.unwrap(getDescription())));
        sj.add("displayName = " + Objects.toString(OptionalUtil.unwrap(getDisplayName())));
        sj.add("notes = " + Objects.toString(OptionalUtil.unwrap(getNotes())));
        sj.add("units = " + Objects.toString(OptionalUtil.unwrap(getUnits())));
        sj.add("retention = " + Objects.toString(OptionalUtil.unwrap(getRetention())));
        sj.add("custom = " + Objects.toString(OptionalUtil.unwrap(getCustom())));
        return "TsdTsmetaImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof TsdTsmeta)) { return false; }
        final TsdTsmeta thatTsdTsmeta = (TsdTsmeta)that;
        if (!Objects.equals(this.getFqnid(), thatTsdTsmeta.getFqnid())) {return false; }
        if (this.getVersion() != thatTsdTsmeta.getVersion()) {return false; }
        if (!Objects.equals(this.getMetricUid(), thatTsdTsmeta.getMetricUid())) {return false; }
        if (!Objects.equals(this.getFqn(), thatTsdTsmeta.getFqn())) {return false; }
        if (!Objects.equals(this.getTsuid(), thatTsdTsmeta.getTsuid())) {return false; }
        if (!Objects.equals(this.getCreated(), thatTsdTsmeta.getCreated())) {return false; }
        if (!Objects.equals(this.getLastUpdate(), thatTsdTsmeta.getLastUpdate())) {return false; }
        if (!Objects.equals(this.getMaxValue(), thatTsdTsmeta.getMaxValue())) {return false; }
        if (!Objects.equals(this.getMinValue(), thatTsdTsmeta.getMinValue())) {return false; }
        if (!Objects.equals(this.getDataType(), thatTsdTsmeta.getDataType())) {return false; }
        if (!Objects.equals(this.getDescription(), thatTsdTsmeta.getDescription())) {return false; }
        if (!Objects.equals(this.getDisplayName(), thatTsdTsmeta.getDisplayName())) {return false; }
        if (!Objects.equals(this.getNotes(), thatTsdTsmeta.getNotes())) {return false; }
        if (!Objects.equals(this.getUnits(), thatTsdTsmeta.getUnits())) {return false; }
        if (!Objects.equals(this.getRetention(), thatTsdTsmeta.getRetention())) {return false; }
        if (!Objects.equals(this.getCustom(), thatTsdTsmeta.getCustom())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(getFqnid());
        hash = 31 * hash + Integer.hashCode(getVersion());
        hash = 31 * hash + Objects.hashCode(getMetricUid());
        hash = 31 * hash + Objects.hashCode(getFqn());
        hash = 31 * hash + Objects.hashCode(getTsuid());
        hash = 31 * hash + Objects.hashCode(getCreated());
        hash = 31 * hash + Objects.hashCode(getLastUpdate());
        hash = 31 * hash + Objects.hashCode(getMaxValue());
        hash = 31 * hash + Objects.hashCode(getMinValue());
        hash = 31 * hash + Objects.hashCode(getDataType());
        hash = 31 * hash + Objects.hashCode(getDescription());
        hash = 31 * hash + Objects.hashCode(getDisplayName());
        hash = 31 * hash + Objects.hashCode(getNotes());
        hash = 31 * hash + Objects.hashCode(getUnits());
        hash = 31 * hash + Objects.hashCode(getRetention());
        hash = 31 * hash + Objects.hashCode(getCustom());
        return hash;
    }
}