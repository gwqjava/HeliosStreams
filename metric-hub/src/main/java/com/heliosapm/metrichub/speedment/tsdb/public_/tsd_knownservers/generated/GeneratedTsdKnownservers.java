package com.heliosapm.metrichub.speedment.tsdb.public_.tsd_knownservers.generated;

import com.heliosapm.metrichub.speedment.tsdb.public_.tsd_knownservers.TsdKnownservers;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.ComparableField;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;
import java.sql.Timestamp;
import java.util.Optional;
import javax.annotation.Generated;

/**
 * The generated base for the {@link
 * com.heliosapm.metrichub.speedment.tsdb.public_.tsd_knownservers.TsdKnownservers}-interface
 * representing entities of the {@code tsd_knownservers}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public interface GeneratedTsdKnownservers {
    
    /**
     * This Field corresponds to the {@link TsdKnownservers} field that can be
     * obtained using the {@link TsdKnownservers#getHost()} method.
     */
    final StringField<TsdKnownservers, String> HOST = StringField.create(
        Identifier.HOST,
        TsdKnownservers::getHost,
        TsdKnownservers::setHost,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link TsdKnownservers} field that can be
     * obtained using the {@link TsdKnownservers#getPort()} method.
     */
    final IntField<TsdKnownservers, Integer> PORT = IntField.create(
        Identifier.PORT,
        TsdKnownservers::getPort,
        TsdKnownservers::setPort,
        TypeMapper.primitive(), 
        false
    );
    /**
     * This Field corresponds to the {@link TsdKnownservers} field that can be
     * obtained using the {@link TsdKnownservers#getUp()} method.
     */
    final StringField<TsdKnownservers, String> UP = StringField.create(
        Identifier.UP,
        TsdKnownservers::getUp,
        TsdKnownservers::setUp,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link TsdKnownservers} field that can be
     * obtained using the {@link TsdKnownservers#getUri()} method.
     */
    final StringField<TsdKnownservers, String> URI = StringField.create(
        Identifier.URI,
        TsdKnownservers::getUri,
        TsdKnownservers::setUri,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link TsdKnownservers} field that can be
     * obtained using the {@link TsdKnownservers#getCreated()} method.
     */
    final ComparableField<TsdKnownservers, Timestamp, Timestamp> CREATED = ComparableField.create(
        Identifier.CREATED,
        TsdKnownservers::getCreated,
        TsdKnownservers::setCreated,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link TsdKnownservers} field that can be
     * obtained using the {@link TsdKnownservers#getLastUpdate()} method.
     */
    final ComparableField<TsdKnownservers, Timestamp, Timestamp> LAST_UPDATE = ComparableField.create(
        Identifier.LAST_UPDATE,
        o -> OptionalUtil.unwrap(o.getLastUpdate()),
        TsdKnownservers::setLastUpdate,
        TypeMapper.identity(), 
        false
    );
    
    /**
     * Returns the host of this TsdKnownservers. The host field corresponds to
     * the database column tsdb.public.tsd_knownservers.host.
     * 
     * @return the host of this TsdKnownservers
     */
    String getHost();
    
    /**
     * Returns the port of this TsdKnownservers. The port field corresponds to
     * the database column tsdb.public.tsd_knownservers.port.
     * 
     * @return the port of this TsdKnownservers
     */
    int getPort();
    
    /**
     * Returns the up of this TsdKnownservers. The up field corresponds to the
     * database column tsdb.public.tsd_knownservers.up.
     * 
     * @return the up of this TsdKnownservers
     */
    String getUp();
    
    /**
     * Returns the uri of this TsdKnownservers. The uri field corresponds to the
     * database column tsdb.public.tsd_knownservers.uri.
     * 
     * @return the uri of this TsdKnownservers
     */
    String getUri();
    
    /**
     * Returns the created of this TsdKnownservers. The created field
     * corresponds to the database column tsdb.public.tsd_knownservers.created.
     * 
     * @return the created of this TsdKnownservers
     */
    Timestamp getCreated();
    
    /**
     * Returns the lastUpdate of this TsdKnownservers. The lastUpdate field
     * corresponds to the database column
     * tsdb.public.tsd_knownservers.last_update.
     * 
     * @return the lastUpdate of this TsdKnownservers
     */
    Optional<Timestamp> getLastUpdate();
    
    /**
     * Sets the host of this TsdKnownservers. The host field corresponds to the
     * database column tsdb.public.tsd_knownservers.host.
     * 
     * @param host to set of this TsdKnownservers
     * @return     this TsdKnownservers instance
     */
    TsdKnownservers setHost(String host);
    
    /**
     * Sets the port of this TsdKnownservers. The port field corresponds to the
     * database column tsdb.public.tsd_knownservers.port.
     * 
     * @param port to set of this TsdKnownservers
     * @return     this TsdKnownservers instance
     */
    TsdKnownservers setPort(int port);
    
    /**
     * Sets the up of this TsdKnownservers. The up field corresponds to the
     * database column tsdb.public.tsd_knownservers.up.
     * 
     * @param up to set of this TsdKnownservers
     * @return   this TsdKnownservers instance
     */
    TsdKnownservers setUp(String up);
    
    /**
     * Sets the uri of this TsdKnownservers. The uri field corresponds to the
     * database column tsdb.public.tsd_knownservers.uri.
     * 
     * @param uri to set of this TsdKnownservers
     * @return    this TsdKnownservers instance
     */
    TsdKnownservers setUri(String uri);
    
    /**
     * Sets the created of this TsdKnownservers. The created field corresponds
     * to the database column tsdb.public.tsd_knownservers.created.
     * 
     * @param created to set of this TsdKnownservers
     * @return        this TsdKnownservers instance
     */
    TsdKnownservers setCreated(Timestamp created);
    
    /**
     * Sets the lastUpdate of this TsdKnownservers. The lastUpdate field
     * corresponds to the database column
     * tsdb.public.tsd_knownservers.last_update.
     * 
     * @param lastUpdate to set of this TsdKnownservers
     * @return           this TsdKnownservers instance
     */
    TsdKnownservers setLastUpdate(Timestamp lastUpdate);
    
    enum Identifier implements ColumnIdentifier<TsdKnownservers> {
        
        HOST ("host"),
        PORT ("port"),
        UP ("up"),
        URI ("uri"),
        CREATED ("created"),
        LAST_UPDATE ("last_update");
        
        private final String columnName;
        private final TableIdentifier<TsdKnownservers> tableIdentifier;
        
        Identifier(String columnName) {
            this.columnName = columnName;
            this.tableIdentifier = TableIdentifier.of(getDbmsName(), getSchemaName(), getTableName());
        }
        
        @Override
        public String getDbmsName() {
            return "tsdb";
        }
        
        @Override
        public String getSchemaName() {
            return "public";
        }
        
        @Override
        public String getTableName() {
            return "tsd_knownservers";
        }
        
        @Override
        public String getColumnName() {
            return this.columnName;
        }
        
        @Override
        public TableIdentifier<TsdKnownservers> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}