<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:context="http://www.springframework.org/schema/context" 
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">
        
        
    <context:property-placeholder/>
    <context:annotation-config/>
    <context:spring-configured/>
    <context:mbean-export registration="ignoreExisting" server="MBeanServer" />
    
	<bean id="MBeanServer" class="com.heliosapm.utils.jmx.JMXHelper"
		lazy-init="false" factory-method="getHeliosMBeanServer">
	</bean>
    
     <!-- 
    <bean id="exporter" class="org.springframework.jmx.export.MBeanExporter">
        <property name="assembler" ref="assembler"/>
        <property name="autodetect" value="true"/>
    </bean>
    
	<bean id="jmxAttributeSource"
            class="org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource"/>    
    
   <bean id="assembler" class="org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler">
        <property name="attributeSource" ref="jmxAttributeSource"/>
    </bean>
            
    -->

    
    <bean id="accumulatorStoreDefinition" class="com.heliosapm.streams.metrics.store.StateStoreDefinition">
		<property name="keySerde">
			<util:constant static-field="com.heliosapm.streams.serialization.HeliosSerdes.STRING_SERDE"/>
		</property>
		<property name="valueSerde">
			<util:constant static-field="com.heliosapm.streams.serialization.HeliosSerdes.LONG_SERDE"/>
		</property>
		<property name="inMemory" value="${streamhub.statestore.accumulator.inmemory:false}"/>		
    </bean>
    
    
    <bean id="meterTextSupplier" class="com.heliosapm.streams.metrics.processors.impl.StreamedMetricMeterSupplier">
    	<property name="aggregationPeriod" value="${streamhub.streamed.metric.supplier.meter.aggregationperiod:5}"/>
    	<property name="idleTimeout" value="${streamhub.streamed.metric.supplier.meter.idletimeout:120}"/>
    	<property name="period" value="${streamhub.streamed.metric.supplier.meter.period:10000}"/>
    	<property name="sources" value="${streamhub.streamed.metric.supplier.meter.source:tsdb.metrics.meter}"/>
    	<property name="topicSink" value="${streamhub.streamed.metric.tsdb.sink:tsdb.metrics.binary}"/>
    	<property name="sourceKeySerde">
    		<util:constant static-field="com.heliosapm.streams.serialization.HeliosSerdes.STRING_SERDE"/>
    	</property>
    	<property name="sourceValueSerde">
    		<util:constant static-field="com.heliosapm.streams.serialization.HeliosSerdes.STREAMED_METRIC_SERDE_THROUGH_STRING"/>
    	</property>    	
    	<property name="sinkKeySerde">
    		<util:constant static-field="com.heliosapm.streams.serialization.HeliosSerdes.STRING_SERDE"/>
    	</property>
    	<property name="sinkValueSerde">
    		<util:constant static-field="com.heliosapm.streams.serialization.HeliosSerdes.STREAMED_METRIC_SERDE"/>
    	</property>
    </bean>
    
    
    
    <bean id="straightThroughText" class="com.heliosapm.streams.metrics.processors.impl.StraightThroughMetricProcessorSupplier">
    	<property name="maxForwards" value="${streamhub.streamed.metric.supplier.straightthrough.maxforwards:100}"/>
    	<property name="period" value="${streamhub.streamed.metric.supplier.straightthrough.period:10000}"/>
    	<property name="sources" value="${streamhub.streamed.metric.supplier.straightthrough.source:tsdb.metrics.st}"/>
    	<property name="topicSink" value="${streamhub.streamed.metric.tsdb.sink:tsdb.metrics.binary}"/>
    	<property name="sourceKeySerde">
    		<util:constant static-field="com.heliosapm.streams.serialization.HeliosSerdes.STRING_SERDE"/>
    	</property>
    	<property name="sourceValueSerde">
    		<util:constant static-field="com.heliosapm.streams.serialization.HeliosSerdes.STREAMED_METRIC_SERDE_THROUGH_STRING"/>
    	</property>    	
    	<property name="sinkKeySerde">
    		<util:constant static-field="com.heliosapm.streams.serialization.HeliosSerdes.STRING_SERDE"/>
    	</property>
    	<property name="sinkValueSerde">
    		<util:constant static-field="com.heliosapm.streams.serialization.HeliosSerdes.STREAMED_METRIC_SERDE"/>
    	</property>
    </bean>
    
    <!-- 
    <bean id="textMetricsMeter" factory-bean="meterTextSupplier" factory-method="get" />
    <bean id="textMetrics" factory-bean="straightThroughText" factory-method="get" />
    -->
    
    
    <bean id="textRouter" class="com.heliosapm.streams.metrics.router.text.TextMetricStreamRouter">
		<constructor-arg ref="streamsConfigProps"/> 	
    	<property name="processorSuppliers">
    		<util:list>
    			<ref bean="meterTextSupplier"/>
    			<ref bean="straightThroughText"/>
    		</util:list>
    	</property>
    </bean>
    
    <bean id="streamsConfigProps" class="java.util.Properties" factory-bean="streamsConfig" factory-method="buildProperties"/>
    
    
    
    <bean id="streamsConfig" class="com.heliosapm.streams.metrics.router.config.StreamsConfigBuilder" >
    	<property name="applicationId" value="StreamHub"/>
    	<property name="bootstrapServers" value="${streamhub.config.bootstrapservers:localhost:9092}"/>
    	<property name="zookeeperConnect" value="${streamhub.config.zookeeperconnect:localhost:2181}"/>
    	<property name="clientId">
    		<util:constant static-field="com.heliosapm.streams.metrics.router.config.StreamsConfigBuilder.DEFAULT_CLIENT_ID" />
    	</property>
    	<property name="pollWaitMs" value="${streamhub.config.pollwaitms:10}"/>
    	<property name="stateStoreDir">
    		<util:constant static-field="com.heliosapm.streams.metrics.router.config.StreamsConfigBuilder.DEFAULT_STATE_STORE_NAME" />
    	</property>
    	<property name="timeExtractor" value="${streamhub.config.timeextractor:com.heliosapm.streams.metrics.TextLineTimestampExtractor}"/>
    	<property name="streamThreads" value="1"/>    	
    </bean>
    
    
    <!-- 
    <bean id="streamsConfigProperties" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
  		<property name="targetObject" ref="streamsConfig" />
  		<property name="targetMethod" value="buildProperties" />
	</bean>
	-->


</beans>