package com.heliosapm.metrichub.speedment.tsdb.public_.tsd_tsmeta.generated;

import com.heliosapm.metrichub.speedment.tsdb.public_.tsd_metric.TsdMetric;
import com.heliosapm.metrichub.speedment.tsdb.public_.tsd_tsmeta.TsdTsmeta;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.Manager;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.ComparableField;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.field.StringForeignKeyField;
import com.speedment.runtime.typemapper.TypeMapper;
import java.sql.Timestamp;
import java.util.Optional;
import java.util.OptionalInt;
import java.util.OptionalLong;
import javax.annotation.Generated;

/**
 * The generated base for the {@link
 * com.heliosapm.metrichub.speedment.tsdb.public_.tsd_tsmeta.TsdTsmeta}-interface
 * representing entities of the {@code tsd_tsmeta}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public interface GeneratedTsdTsmeta {
    
    /**
     * This Field corresponds to the {@link TsdTsmeta} field that can be
     * obtained using the {@link TsdTsmeta#getFqnid()} method.
     */
    final ComparableField<TsdTsmeta, Long, Long> FQNID = ComparableField.create(
        Identifier.FQNID,
        TsdTsmeta::getFqnid,
        TsdTsmeta::setFqnid,
        TypeMapper.identity(), 
        true
    );
    /**
     * This Field corresponds to the {@link TsdTsmeta} field that can be
     * obtained using the {@link TsdTsmeta#getVersion()} method.
     */
    final IntField<TsdTsmeta, Integer> VERSION = IntField.create(
        Identifier.VERSION,
        TsdTsmeta::getVersion,
        TsdTsmeta::setVersion,
        TypeMapper.primitive(), 
        false
    );
    /**
     * This Field corresponds to the {@link TsdTsmeta} field that can be
     * obtained using the {@link TsdTsmeta#getMetricUid()} method.
     */
    final StringForeignKeyField<TsdTsmeta, String, TsdMetric> METRIC_UID = StringForeignKeyField.create(
        Identifier.METRIC_UID,
        TsdTsmeta::getMetricUid,
        TsdTsmeta::setMetricUid,
        TsdMetric.XUID,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link TsdTsmeta} field that can be
     * obtained using the {@link TsdTsmeta#getFqn()} method.
     */
    final StringField<TsdTsmeta, String> FQN = StringField.create(
        Identifier.FQN,
        TsdTsmeta::getFqn,
        TsdTsmeta::setFqn,
        TypeMapper.identity(), 
        true
    );
    /**
     * This Field corresponds to the {@link TsdTsmeta} field that can be
     * obtained using the {@link TsdTsmeta#getTsuid()} method.
     */
    final StringField<TsdTsmeta, String> TSUID = StringField.create(
        Identifier.TSUID,
        TsdTsmeta::getTsuid,
        TsdTsmeta::setTsuid,
        TypeMapper.identity(), 
        true
    );
    /**
     * This Field corresponds to the {@link TsdTsmeta} field that can be
     * obtained using the {@link TsdTsmeta#getCreated()} method.
     */
    final ComparableField<TsdTsmeta, Timestamp, Timestamp> CREATED = ComparableField.create(
        Identifier.CREATED,
        TsdTsmeta::getCreated,
        TsdTsmeta::setCreated,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link TsdTsmeta} field that can be
     * obtained using the {@link TsdTsmeta#getLastUpdate()} method.
     */
    final ComparableField<TsdTsmeta, Timestamp, Timestamp> LAST_UPDATE = ComparableField.create(
        Identifier.LAST_UPDATE,
        TsdTsmeta::getLastUpdate,
        TsdTsmeta::setLastUpdate,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link TsdTsmeta} field that can be
     * obtained using the {@link TsdTsmeta#getMaxValue()} method.
     */
    final ComparableField<TsdTsmeta, Long, Long> MAX_VALUE = ComparableField.create(
        Identifier.MAX_VALUE,
        o -> OptionalUtil.unwrap(o.getMaxValue()),
        TsdTsmeta::setMaxValue,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link TsdTsmeta} field that can be
     * obtained using the {@link TsdTsmeta#getMinValue()} method.
     */
    final ComparableField<TsdTsmeta, Long, Long> MIN_VALUE = ComparableField.create(
        Identifier.MIN_VALUE,
        o -> OptionalUtil.unwrap(o.getMinValue()),
        TsdTsmeta::setMinValue,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link TsdTsmeta} field that can be
     * obtained using the {@link TsdTsmeta#getDataType()} method.
     */
    final StringField<TsdTsmeta, String> DATA_TYPE = StringField.create(
        Identifier.DATA_TYPE,
        o -> OptionalUtil.unwrap(o.getDataType()),
        TsdTsmeta::setDataType,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link TsdTsmeta} field that can be
     * obtained using the {@link TsdTsmeta#getDescription()} method.
     */
    final StringField<TsdTsmeta, String> DESCRIPTION = StringField.create(
        Identifier.DESCRIPTION,
        o -> OptionalUtil.unwrap(o.getDescription()),
        TsdTsmeta::setDescription,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link TsdTsmeta} field that can be
     * obtained using the {@link TsdTsmeta#getDisplayName()} method.
     */
    final StringField<TsdTsmeta, String> DISPLAY_NAME = StringField.create(
        Identifier.DISPLAY_NAME,
        o -> OptionalUtil.unwrap(o.getDisplayName()),
        TsdTsmeta::setDisplayName,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link TsdTsmeta} field that can be
     * obtained using the {@link TsdTsmeta#getNotes()} method.
     */
    final StringField<TsdTsmeta, String> NOTES = StringField.create(
        Identifier.NOTES,
        o -> OptionalUtil.unwrap(o.getNotes()),
        TsdTsmeta::setNotes,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link TsdTsmeta} field that can be
     * obtained using the {@link TsdTsmeta#getUnits()} method.
     */
    final StringField<TsdTsmeta, String> UNITS = StringField.create(
        Identifier.UNITS,
        o -> OptionalUtil.unwrap(o.getUnits()),
        TsdTsmeta::setUnits,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link TsdTsmeta} field that can be
     * obtained using the {@link TsdTsmeta#getRetention()} method.
     */
    final ComparableField<TsdTsmeta, Integer, Integer> RETENTION = ComparableField.create(
        Identifier.RETENTION,
        o -> OptionalUtil.unwrap(o.getRetention()),
        TsdTsmeta::setRetention,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link TsdTsmeta} field that can be
     * obtained using the {@link TsdTsmeta#getCustom()} method.
     */
    final StringField<TsdTsmeta, String> CUSTOM = StringField.create(
        Identifier.CUSTOM,
        o -> OptionalUtil.unwrap(o.getCustom()),
        TsdTsmeta::setCustom,
        TypeMapper.identity(), 
        false
    );
    
    /**
     * Returns the fqnid of this TsdTsmeta. The fqnid field corresponds to the
     * database column tsdb.public.tsd_tsmeta.fqnid.
     * 
     * @return the fqnid of this TsdTsmeta
     */
    Long getFqnid();
    
    /**
     * Returns the version of this TsdTsmeta. The version field corresponds to
     * the database column tsdb.public.tsd_tsmeta.version.
     * 
     * @return the version of this TsdTsmeta
     */
    int getVersion();
    
    /**
     * Returns the metricUid of this TsdTsmeta. The metricUid field corresponds
     * to the database column tsdb.public.tsd_tsmeta.metric_uid.
     * 
     * @return the metricUid of this TsdTsmeta
     */
    String getMetricUid();
    
    /**
     * Returns the fqn of this TsdTsmeta. The fqn field corresponds to the
     * database column tsdb.public.tsd_tsmeta.fqn.
     * 
     * @return the fqn of this TsdTsmeta
     */
    String getFqn();
    
    /**
     * Returns the tsuid of this TsdTsmeta. The tsuid field corresponds to the
     * database column tsdb.public.tsd_tsmeta.tsuid.
     * 
     * @return the tsuid of this TsdTsmeta
     */
    String getTsuid();
    
    /**
     * Returns the created of this TsdTsmeta. The created field corresponds to
     * the database column tsdb.public.tsd_tsmeta.created.
     * 
     * @return the created of this TsdTsmeta
     */
    Timestamp getCreated();
    
    /**
     * Returns the lastUpdate of this TsdTsmeta. The lastUpdate field
     * corresponds to the database column tsdb.public.tsd_tsmeta.last_update.
     * 
     * @return the lastUpdate of this TsdTsmeta
     */
    Timestamp getLastUpdate();
    
    /**
     * Returns the maxValue of this TsdTsmeta. The maxValue field corresponds to
     * the database column tsdb.public.tsd_tsmeta.max_value.
     * 
     * @return the maxValue of this TsdTsmeta
     */
    OptionalLong getMaxValue();
    
    /**
     * Returns the minValue of this TsdTsmeta. The minValue field corresponds to
     * the database column tsdb.public.tsd_tsmeta.min_value.
     * 
     * @return the minValue of this TsdTsmeta
     */
    OptionalLong getMinValue();
    
    /**
     * Returns the dataType of this TsdTsmeta. The dataType field corresponds to
     * the database column tsdb.public.tsd_tsmeta.data_type.
     * 
     * @return the dataType of this TsdTsmeta
     */
    Optional<String> getDataType();
    
    /**
     * Returns the description of this TsdTsmeta. The description field
     * corresponds to the database column tsdb.public.tsd_tsmeta.description.
     * 
     * @return the description of this TsdTsmeta
     */
    Optional<String> getDescription();
    
    /**
     * Returns the displayName of this TsdTsmeta. The displayName field
     * corresponds to the database column tsdb.public.tsd_tsmeta.display_name.
     * 
     * @return the displayName of this TsdTsmeta
     */
    Optional<String> getDisplayName();
    
    /**
     * Returns the notes of this TsdTsmeta. The notes field corresponds to the
     * database column tsdb.public.tsd_tsmeta.notes.
     * 
     * @return the notes of this TsdTsmeta
     */
    Optional<String> getNotes();
    
    /**
     * Returns the units of this TsdTsmeta. The units field corresponds to the
     * database column tsdb.public.tsd_tsmeta.units.
     * 
     * @return the units of this TsdTsmeta
     */
    Optional<String> getUnits();
    
    /**
     * Returns the retention of this TsdTsmeta. The retention field corresponds
     * to the database column tsdb.public.tsd_tsmeta.retention.
     * 
     * @return the retention of this TsdTsmeta
     */
    OptionalInt getRetention();
    
    /**
     * Returns the custom of this TsdTsmeta. The custom field corresponds to the
     * database column tsdb.public.tsd_tsmeta.custom.
     * 
     * @return the custom of this TsdTsmeta
     */
    Optional<String> getCustom();
    
    /**
     * Sets the fqnid of this TsdTsmeta. The fqnid field corresponds to the
     * database column tsdb.public.tsd_tsmeta.fqnid.
     * 
     * @param fqnid to set of this TsdTsmeta
     * @return      this TsdTsmeta instance
     */
    TsdTsmeta setFqnid(Long fqnid);
    
    /**
     * Sets the version of this TsdTsmeta. The version field corresponds to the
     * database column tsdb.public.tsd_tsmeta.version.
     * 
     * @param version to set of this TsdTsmeta
     * @return        this TsdTsmeta instance
     */
    TsdTsmeta setVersion(int version);
    
    /**
     * Sets the metricUid of this TsdTsmeta. The metricUid field corresponds to
     * the database column tsdb.public.tsd_tsmeta.metric_uid.
     * 
     * @param metricUid to set of this TsdTsmeta
     * @return          this TsdTsmeta instance
     */
    TsdTsmeta setMetricUid(String metricUid);
    
    /**
     * Sets the fqn of this TsdTsmeta. The fqn field corresponds to the database
     * column tsdb.public.tsd_tsmeta.fqn.
     * 
     * @param fqn to set of this TsdTsmeta
     * @return    this TsdTsmeta instance
     */
    TsdTsmeta setFqn(String fqn);
    
    /**
     * Sets the tsuid of this TsdTsmeta. The tsuid field corresponds to the
     * database column tsdb.public.tsd_tsmeta.tsuid.
     * 
     * @param tsuid to set of this TsdTsmeta
     * @return      this TsdTsmeta instance
     */
    TsdTsmeta setTsuid(String tsuid);
    
    /**
     * Sets the created of this TsdTsmeta. The created field corresponds to the
     * database column tsdb.public.tsd_tsmeta.created.
     * 
     * @param created to set of this TsdTsmeta
     * @return        this TsdTsmeta instance
     */
    TsdTsmeta setCreated(Timestamp created);
    
    /**
     * Sets the lastUpdate of this TsdTsmeta. The lastUpdate field corresponds
     * to the database column tsdb.public.tsd_tsmeta.last_update.
     * 
     * @param lastUpdate to set of this TsdTsmeta
     * @return           this TsdTsmeta instance
     */
    TsdTsmeta setLastUpdate(Timestamp lastUpdate);
    
    /**
     * Sets the maxValue of this TsdTsmeta. The maxValue field corresponds to
     * the database column tsdb.public.tsd_tsmeta.max_value.
     * 
     * @param maxValue to set of this TsdTsmeta
     * @return         this TsdTsmeta instance
     */
    TsdTsmeta setMaxValue(Long maxValue);
    
    /**
     * Sets the minValue of this TsdTsmeta. The minValue field corresponds to
     * the database column tsdb.public.tsd_tsmeta.min_value.
     * 
     * @param minValue to set of this TsdTsmeta
     * @return         this TsdTsmeta instance
     */
    TsdTsmeta setMinValue(Long minValue);
    
    /**
     * Sets the dataType of this TsdTsmeta. The dataType field corresponds to
     * the database column tsdb.public.tsd_tsmeta.data_type.
     * 
     * @param dataType to set of this TsdTsmeta
     * @return         this TsdTsmeta instance
     */
    TsdTsmeta setDataType(String dataType);
    
    /**
     * Sets the description of this TsdTsmeta. The description field corresponds
     * to the database column tsdb.public.tsd_tsmeta.description.
     * 
     * @param description to set of this TsdTsmeta
     * @return            this TsdTsmeta instance
     */
    TsdTsmeta setDescription(String description);
    
    /**
     * Sets the displayName of this TsdTsmeta. The displayName field corresponds
     * to the database column tsdb.public.tsd_tsmeta.display_name.
     * 
     * @param displayName to set of this TsdTsmeta
     * @return            this TsdTsmeta instance
     */
    TsdTsmeta setDisplayName(String displayName);
    
    /**
     * Sets the notes of this TsdTsmeta. The notes field corresponds to the
     * database column tsdb.public.tsd_tsmeta.notes.
     * 
     * @param notes to set of this TsdTsmeta
     * @return      this TsdTsmeta instance
     */
    TsdTsmeta setNotes(String notes);
    
    /**
     * Sets the units of this TsdTsmeta. The units field corresponds to the
     * database column tsdb.public.tsd_tsmeta.units.
     * 
     * @param units to set of this TsdTsmeta
     * @return      this TsdTsmeta instance
     */
    TsdTsmeta setUnits(String units);
    
    /**
     * Sets the retention of this TsdTsmeta. The retention field corresponds to
     * the database column tsdb.public.tsd_tsmeta.retention.
     * 
     * @param retention to set of this TsdTsmeta
     * @return          this TsdTsmeta instance
     */
    TsdTsmeta setRetention(Integer retention);
    
    /**
     * Sets the custom of this TsdTsmeta. The custom field corresponds to the
     * database column tsdb.public.tsd_tsmeta.custom.
     * 
     * @param custom to set of this TsdTsmeta
     * @return       this TsdTsmeta instance
     */
    TsdTsmeta setCustom(String custom);
    
    /**
     * Queries the specified manager for the referenced TsdMetric. If no such
     * TsdMetric exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    TsdMetric findMetricUid(Manager<TsdMetric> foreignManager);
    
    enum Identifier implements ColumnIdentifier<TsdTsmeta> {
        
        FQNID ("fqnid"),
        VERSION ("version"),
        METRIC_UID ("metric_uid"),
        FQN ("fqn"),
        TSUID ("tsuid"),
        CREATED ("created"),
        LAST_UPDATE ("last_update"),
        MAX_VALUE ("max_value"),
        MIN_VALUE ("min_value"),
        DATA_TYPE ("data_type"),
        DESCRIPTION ("description"),
        DISPLAY_NAME ("display_name"),
        NOTES ("notes"),
        UNITS ("units"),
        RETENTION ("retention"),
        CUSTOM ("custom");
        
        private final String columnName;
        private final TableIdentifier<TsdTsmeta> tableIdentifier;
        
        Identifier(String columnName) {
            this.columnName = columnName;
            this.tableIdentifier = TableIdentifier.of(getDbmsName(), getSchemaName(), getTableName());
        }
        
        @Override
        public String getDbmsName() {
            return "tsdb";
        }
        
        @Override
        public String getSchemaName() {
            return "public";
        }
        
        @Override
        public String getTableName() {
            return "tsd_tsmeta";
        }
        
        @Override
        public String getColumnName() {
            return this.columnName;
        }
        
        @Override
        public TableIdentifier<TsdTsmeta> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}