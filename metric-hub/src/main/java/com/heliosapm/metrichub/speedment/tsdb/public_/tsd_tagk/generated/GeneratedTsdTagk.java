package com.heliosapm.metrichub.speedment.tsdb.public_.tsd_tagk.generated;

import com.heliosapm.metrichub.speedment.tsdb.public_.tsd_tagk.TsdTagk;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.ComparableField;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;
import java.sql.Timestamp;
import java.util.Optional;
import javax.annotation.Generated;

/**
 * The generated base for the {@link
 * com.heliosapm.metrichub.speedment.tsdb.public_.tsd_tagk.TsdTagk}-interface
 * representing entities of the {@code tsd_tagk}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public interface GeneratedTsdTagk {
    
    /**
     * This Field corresponds to the {@link TsdTagk} field that can be obtained
     * using the {@link TsdTagk#getXuid()} method.
     */
    final StringField<TsdTagk, String> XUID = StringField.create(
        Identifier.XUID,
        TsdTagk::getXuid,
        TsdTagk::setXuid,
        TypeMapper.identity(), 
        true
    );
    /**
     * This Field corresponds to the {@link TsdTagk} field that can be obtained
     * using the {@link TsdTagk#getVersion()} method.
     */
    final IntField<TsdTagk, Integer> VERSION = IntField.create(
        Identifier.VERSION,
        TsdTagk::getVersion,
        TsdTagk::setVersion,
        TypeMapper.primitive(), 
        false
    );
    /**
     * This Field corresponds to the {@link TsdTagk} field that can be obtained
     * using the {@link TsdTagk#getName()} method.
     */
    final StringField<TsdTagk, String> NAME = StringField.create(
        Identifier.NAME,
        TsdTagk::getName,
        TsdTagk::setName,
        TypeMapper.identity(), 
        true
    );
    /**
     * This Field corresponds to the {@link TsdTagk} field that can be obtained
     * using the {@link TsdTagk#getCreated()} method.
     */
    final ComparableField<TsdTagk, Timestamp, Timestamp> CREATED = ComparableField.create(
        Identifier.CREATED,
        TsdTagk::getCreated,
        TsdTagk::setCreated,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link TsdTagk} field that can be obtained
     * using the {@link TsdTagk#getLastUpdate()} method.
     */
    final ComparableField<TsdTagk, Timestamp, Timestamp> LAST_UPDATE = ComparableField.create(
        Identifier.LAST_UPDATE,
        TsdTagk::getLastUpdate,
        TsdTagk::setLastUpdate,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link TsdTagk} field that can be obtained
     * using the {@link TsdTagk#getDescription()} method.
     */
    final StringField<TsdTagk, String> DESCRIPTION = StringField.create(
        Identifier.DESCRIPTION,
        o -> OptionalUtil.unwrap(o.getDescription()),
        TsdTagk::setDescription,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link TsdTagk} field that can be obtained
     * using the {@link TsdTagk#getDisplayName()} method.
     */
    final StringField<TsdTagk, String> DISPLAY_NAME = StringField.create(
        Identifier.DISPLAY_NAME,
        o -> OptionalUtil.unwrap(o.getDisplayName()),
        TsdTagk::setDisplayName,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link TsdTagk} field that can be obtained
     * using the {@link TsdTagk#getNotes()} method.
     */
    final StringField<TsdTagk, String> NOTES = StringField.create(
        Identifier.NOTES,
        o -> OptionalUtil.unwrap(o.getNotes()),
        TsdTagk::setNotes,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link TsdTagk} field that can be obtained
     * using the {@link TsdTagk#getCustom()} method.
     */
    final StringField<TsdTagk, String> CUSTOM = StringField.create(
        Identifier.CUSTOM,
        o -> OptionalUtil.unwrap(o.getCustom()),
        TsdTagk::setCustom,
        TypeMapper.identity(), 
        false
    );
    
    /**
     * Returns the xuid of this TsdTagk. The xuid field corresponds to the
     * database column tsdb.public.tsd_tagk.xuid.
     * 
     * @return the xuid of this TsdTagk
     */
    String getXuid();
    
    /**
     * Returns the version of this TsdTagk. The version field corresponds to the
     * database column tsdb.public.tsd_tagk.version.
     * 
     * @return the version of this TsdTagk
     */
    int getVersion();
    
    /**
     * Returns the name of this TsdTagk. The name field corresponds to the
     * database column tsdb.public.tsd_tagk.name.
     * 
     * @return the name of this TsdTagk
     */
    String getName();
    
    /**
     * Returns the created of this TsdTagk. The created field corresponds to the
     * database column tsdb.public.tsd_tagk.created.
     * 
     * @return the created of this TsdTagk
     */
    Timestamp getCreated();
    
    /**
     * Returns the lastUpdate of this TsdTagk. The lastUpdate field corresponds
     * to the database column tsdb.public.tsd_tagk.last_update.
     * 
     * @return the lastUpdate of this TsdTagk
     */
    Timestamp getLastUpdate();
    
    /**
     * Returns the description of this TsdTagk. The description field
     * corresponds to the database column tsdb.public.tsd_tagk.description.
     * 
     * @return the description of this TsdTagk
     */
    Optional<String> getDescription();
    
    /**
     * Returns the displayName of this TsdTagk. The displayName field
     * corresponds to the database column tsdb.public.tsd_tagk.display_name.
     * 
     * @return the displayName of this TsdTagk
     */
    Optional<String> getDisplayName();
    
    /**
     * Returns the notes of this TsdTagk. The notes field corresponds to the
     * database column tsdb.public.tsd_tagk.notes.
     * 
     * @return the notes of this TsdTagk
     */
    Optional<String> getNotes();
    
    /**
     * Returns the custom of this TsdTagk. The custom field corresponds to the
     * database column tsdb.public.tsd_tagk.custom.
     * 
     * @return the custom of this TsdTagk
     */
    Optional<String> getCustom();
    
    /**
     * Sets the xuid of this TsdTagk. The xuid field corresponds to the database
     * column tsdb.public.tsd_tagk.xuid.
     * 
     * @param xuid to set of this TsdTagk
     * @return     this TsdTagk instance
     */
    TsdTagk setXuid(String xuid);
    
    /**
     * Sets the version of this TsdTagk. The version field corresponds to the
     * database column tsdb.public.tsd_tagk.version.
     * 
     * @param version to set of this TsdTagk
     * @return        this TsdTagk instance
     */
    TsdTagk setVersion(int version);
    
    /**
     * Sets the name of this TsdTagk. The name field corresponds to the database
     * column tsdb.public.tsd_tagk.name.
     * 
     * @param name to set of this TsdTagk
     * @return     this TsdTagk instance
     */
    TsdTagk setName(String name);
    
    /**
     * Sets the created of this TsdTagk. The created field corresponds to the
     * database column tsdb.public.tsd_tagk.created.
     * 
     * @param created to set of this TsdTagk
     * @return        this TsdTagk instance
     */
    TsdTagk setCreated(Timestamp created);
    
    /**
     * Sets the lastUpdate of this TsdTagk. The lastUpdate field corresponds to
     * the database column tsdb.public.tsd_tagk.last_update.
     * 
     * @param lastUpdate to set of this TsdTagk
     * @return           this TsdTagk instance
     */
    TsdTagk setLastUpdate(Timestamp lastUpdate);
    
    /**
     * Sets the description of this TsdTagk. The description field corresponds
     * to the database column tsdb.public.tsd_tagk.description.
     * 
     * @param description to set of this TsdTagk
     * @return            this TsdTagk instance
     */
    TsdTagk setDescription(String description);
    
    /**
     * Sets the displayName of this TsdTagk. The displayName field corresponds
     * to the database column tsdb.public.tsd_tagk.display_name.
     * 
     * @param displayName to set of this TsdTagk
     * @return            this TsdTagk instance
     */
    TsdTagk setDisplayName(String displayName);
    
    /**
     * Sets the notes of this TsdTagk. The notes field corresponds to the
     * database column tsdb.public.tsd_tagk.notes.
     * 
     * @param notes to set of this TsdTagk
     * @return      this TsdTagk instance
     */
    TsdTagk setNotes(String notes);
    
    /**
     * Sets the custom of this TsdTagk. The custom field corresponds to the
     * database column tsdb.public.tsd_tagk.custom.
     * 
     * @param custom to set of this TsdTagk
     * @return       this TsdTagk instance
     */
    TsdTagk setCustom(String custom);
    
    enum Identifier implements ColumnIdentifier<TsdTagk> {
        
        XUID ("xuid"),
        VERSION ("version"),
        NAME ("name"),
        CREATED ("created"),
        LAST_UPDATE ("last_update"),
        DESCRIPTION ("description"),
        DISPLAY_NAME ("display_name"),
        NOTES ("notes"),
        CUSTOM ("custom");
        
        private final String columnName;
        private final TableIdentifier<TsdTagk> tableIdentifier;
        
        Identifier(String columnName) {
            this.columnName = columnName;
            this.tableIdentifier = TableIdentifier.of(getDbmsName(), getSchemaName(), getTableName());
        }
        
        @Override
        public String getDbmsName() {
            return "tsdb";
        }
        
        @Override
        public String getSchemaName() {
            return "public";
        }
        
        @Override
        public String getTableName() {
            return "tsd_tagk";
        }
        
        @Override
        public String getColumnName() {
            return this.columnName;
        }
        
        @Override
        public TableIdentifier<TsdTagk> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}