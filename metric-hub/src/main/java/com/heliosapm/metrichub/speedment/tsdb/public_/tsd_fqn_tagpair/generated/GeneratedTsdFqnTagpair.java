package com.heliosapm.metrichub.speedment.tsdb.public_.tsd_fqn_tagpair.generated;

import com.heliosapm.metrichub.speedment.tsdb.public_.tsd_fqn_tagpair.TsdFqnTagpair;
import com.heliosapm.metrichub.speedment.tsdb.public_.tsd_tagpair.TsdTagpair;
import com.heliosapm.metrichub.speedment.tsdb.public_.tsd_tsmeta.TsdTsmeta;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.Manager;
import com.speedment.runtime.field.ComparableField;
import com.speedment.runtime.field.ComparableForeignKeyField;
import com.speedment.runtime.field.ShortField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.field.StringForeignKeyField;
import com.speedment.runtime.typemapper.TypeMapper;
import javax.annotation.Generated;

/**
 * The generated base for the {@link
 * com.heliosapm.metrichub.speedment.tsdb.public_.tsd_fqn_tagpair.TsdFqnTagpair}-interface
 * representing entities of the {@code tsd_fqn_tagpair}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public interface GeneratedTsdFqnTagpair {
    
    /**
     * This Field corresponds to the {@link TsdFqnTagpair} field that can be
     * obtained using the {@link TsdFqnTagpair#getFqnTpId()} method.
     */
    final ComparableField<TsdFqnTagpair, Long, Long> FQN_TP_ID = ComparableField.create(
        Identifier.FQN_TP_ID,
        TsdFqnTagpair::getFqnTpId,
        TsdFqnTagpair::setFqnTpId,
        TypeMapper.identity(), 
        true
    );
    /**
     * This Field corresponds to the {@link TsdFqnTagpair} field that can be
     * obtained using the {@link TsdFqnTagpair#getFqnid()} method.
     */
    final ComparableForeignKeyField<TsdFqnTagpair, Long, Long, TsdTsmeta> FQNID = ComparableForeignKeyField.create(
        Identifier.FQNID,
        TsdFqnTagpair::getFqnid,
        TsdFqnTagpair::setFqnid,
        TsdTsmeta.FQNID,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link TsdFqnTagpair} field that can be
     * obtained using the {@link TsdFqnTagpair#getXuid()} method.
     */
    final StringForeignKeyField<TsdFqnTagpair, String, TsdTagpair> XUID = StringForeignKeyField.create(
        Identifier.XUID,
        TsdFqnTagpair::getXuid,
        TsdFqnTagpair::setXuid,
        TsdTagpair.XUID,
        TypeMapper.identity(), 
        false
    );
    /**
     * This Field corresponds to the {@link TsdFqnTagpair} field that can be
     * obtained using the {@link TsdFqnTagpair#getPorder()} method.
     */
    final ShortField<TsdFqnTagpair, Short> PORDER = ShortField.create(
        Identifier.PORDER,
        TsdFqnTagpair::getPorder,
        TsdFqnTagpair::setPorder,
        TypeMapper.primitive(), 
        false
    );
    /**
     * This Field corresponds to the {@link TsdFqnTagpair} field that can be
     * obtained using the {@link TsdFqnTagpair#getNode()} method.
     */
    final StringField<TsdFqnTagpair, String> NODE = StringField.create(
        Identifier.NODE,
        TsdFqnTagpair::getNode,
        TsdFqnTagpair::setNode,
        TypeMapper.identity(), 
        false
    );
    
    /**
     * Returns the fqnTpId of this TsdFqnTagpair. The fqnTpId field corresponds
     * to the database column tsdb.public.tsd_fqn_tagpair.fqn_tp_id.
     * 
     * @return the fqnTpId of this TsdFqnTagpair
     */
    Long getFqnTpId();
    
    /**
     * Returns the fqnid of this TsdFqnTagpair. The fqnid field corresponds to
     * the database column tsdb.public.tsd_fqn_tagpair.fqnid.
     * 
     * @return the fqnid of this TsdFqnTagpair
     */
    Long getFqnid();
    
    /**
     * Returns the xuid of this TsdFqnTagpair. The xuid field corresponds to the
     * database column tsdb.public.tsd_fqn_tagpair.xuid.
     * 
     * @return the xuid of this TsdFqnTagpair
     */
    String getXuid();
    
    /**
     * Returns the porder of this TsdFqnTagpair. The porder field corresponds to
     * the database column tsdb.public.tsd_fqn_tagpair.porder.
     * 
     * @return the porder of this TsdFqnTagpair
     */
    short getPorder();
    
    /**
     * Returns the node of this TsdFqnTagpair. The node field corresponds to the
     * database column tsdb.public.tsd_fqn_tagpair.node.
     * 
     * @return the node of this TsdFqnTagpair
     */
    String getNode();
    
    /**
     * Sets the fqnTpId of this TsdFqnTagpair. The fqnTpId field corresponds to
     * the database column tsdb.public.tsd_fqn_tagpair.fqn_tp_id.
     * 
     * @param fqnTpId to set of this TsdFqnTagpair
     * @return        this TsdFqnTagpair instance
     */
    TsdFqnTagpair setFqnTpId(Long fqnTpId);
    
    /**
     * Sets the fqnid of this TsdFqnTagpair. The fqnid field corresponds to the
     * database column tsdb.public.tsd_fqn_tagpair.fqnid.
     * 
     * @param fqnid to set of this TsdFqnTagpair
     * @return      this TsdFqnTagpair instance
     */
    TsdFqnTagpair setFqnid(Long fqnid);
    
    /**
     * Sets the xuid of this TsdFqnTagpair. The xuid field corresponds to the
     * database column tsdb.public.tsd_fqn_tagpair.xuid.
     * 
     * @param xuid to set of this TsdFqnTagpair
     * @return     this TsdFqnTagpair instance
     */
    TsdFqnTagpair setXuid(String xuid);
    
    /**
     * Sets the porder of this TsdFqnTagpair. The porder field corresponds to
     * the database column tsdb.public.tsd_fqn_tagpair.porder.
     * 
     * @param porder to set of this TsdFqnTagpair
     * @return       this TsdFqnTagpair instance
     */
    TsdFqnTagpair setPorder(short porder);
    
    /**
     * Sets the node of this TsdFqnTagpair. The node field corresponds to the
     * database column tsdb.public.tsd_fqn_tagpair.node.
     * 
     * @param node to set of this TsdFqnTagpair
     * @return     this TsdFqnTagpair instance
     */
    TsdFqnTagpair setNode(String node);
    
    /**
     * Queries the specified manager for the referenced TsdTsmeta. If no such
     * TsdTsmeta exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    TsdTsmeta findFqnid(Manager<TsdTsmeta> foreignManager);
    
    /**
     * Queries the specified manager for the referenced TsdTagpair. If no such
     * TsdTagpair exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    TsdTagpair findXuid(Manager<TsdTagpair> foreignManager);
    
    enum Identifier implements ColumnIdentifier<TsdFqnTagpair> {
        
        FQN_TP_ID ("fqn_tp_id"),
        FQNID ("fqnid"),
        XUID ("xuid"),
        PORDER ("porder"),
        NODE ("node");
        
        private final String columnName;
        private final TableIdentifier<TsdFqnTagpair> tableIdentifier;
        
        Identifier(String columnName) {
            this.columnName = columnName;
            this.tableIdentifier = TableIdentifier.of(getDbmsName(), getSchemaName(), getTableName());
        }
        
        @Override
        public String getDbmsName() {
            return "tsdb";
        }
        
        @Override
        public String getSchemaName() {
            return "public";
        }
        
        @Override
        public String getTableName() {
            return "tsd_fqn_tagpair";
        }
        
        @Override
        public String getColumnName() {
            return this.columnName;
        }
        
        @Override
        public TableIdentifier<TsdFqnTagpair> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}