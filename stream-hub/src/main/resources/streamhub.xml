<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:context="http://www.springframework.org/schema/context" 
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">
        
        
    <context:property-placeholder/>
    <context:annotation-config/>
    <context:spring-configured/>
    <context:mbean-export registration="ignoreExisting" server="MBeanServer" />
    
	<bean id="MBeanServer" class="com.heliosapm.utils.jmx.JMXHelper"
		lazy-init="false" factory-method="getHeliosMBeanServer">
	</bean>
    
     <!-- 
    <bean id="exporter" class="org.springframework.jmx.export.MBeanExporter">
        <property name="assembler" ref="assembler"/>
        <property name="autodetect" value="true"/>
    </bean>
    
	<bean id="jmxAttributeSource"
            class="org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource"/>    
    
   <bean id="assembler" class="org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler">
        <property name="attributeSource" ref="jmxAttributeSource"/>
    </bean>
            
    -->

    
    
    
    
    
    <bean id="metricTextToBinNode" class="com.heliosapm.streams.metrics.router.nodes.TextToBinaryTransformNode">
    	<property name="fullKey" value="${streamhub.meter.texttobin.fullkey:true}"/> 
    	<property name="sinkTopic" value="${streamhub.meter.texttobin.sink:tsdb.metrics.meter}"/>
    	<property name="sourceTopics" value="${streamhub.meter.texttobin.sources:tsdb.metrics.text.meter}"/>
    </bean>
    
    
    <!-- final long windowDuration, final long idleRetention, final boolean resetting, final V aggregator -->
    
    <!-- 
    
    <bean id="MeteringAggregation" class="com.heliosapm.streams.metrics.router.nodes.WindowAggregation" factory-method="getInstance">
    	<constructor-arg value="5"/>  		
    	<constructor-arg value="0"/>  		
    	<constructor-arg value="true"/> 	
    	<constructor-arg> 					
    		<bean id="MeteringAggregationAggregator" class="com.heliosapm.streams.metrics.router.nodes.StreamedMetricMeterAggregator"/>
    	</constructor-arg>
    </bean>
    
    <bean id="metricMeteringNode" class="com.heliosapm.streams.metrics.router.nodes.StreamedMetricMeterNode">
		<property name="fullKey" value="${streamhub.meter.fullkey:true}"/> 
		<property name="sinkTopic" value="${streamhub.meter.sink:tsdb.metrics.binary}"/>
		<property name="sourceTopics" value="${streamhub.meter.sources:tsdb.metrics.meter}"/>
		<property name="ignoreDoubles" value="${streamhub.meter.ignore.doubles:false}"/>
		<property name="ignoreValues" value="${streamhub.meter.ignore.values:false}"/>
		<property name="reportInSeconds" value="${streamhub.meter.tps:true}"/>
		<property name="aggregationWindow" ref="MeteringAggregation" />  
		<property name="windowTimeSummary" value="${streamhub.meter.window.summary:MIDDLE}"/>
    </bean>
    
    -->
    
    <bean id="metricMeteringNode" class="com.heliosapm.streams.metrics.router.nodes.KMetricAggreagator">
		<property name="sinkTopic" value="${streamhub.meter.sink:tsdb.metrics.binary}"/>
		<property name="sourceTopics" value="${streamhub.meter.sources:tsdb.metrics.meter}"/>
		<property name="windowDuration" value="5000"/>    
		<property name="idleDuration" value="300000"/>
    </bean>
    
    <bean id="metricRouter" class="com.heliosapm.streams.metrics.router.MetricRouterBuilder">
		<property name="configBuilder" ref="streamsConfig"/>
    </bean>
    
    <bean id="streamsConfigProps" class="java.util.Properties" factory-bean="streamsConfig" factory-method="buildProperties"/>
    
    
    
    <bean id="streamsConfig" class="com.heliosapm.streams.metrics.router.config.StreamsConfigBuilder" >
    	<property name="applicationId" value="StreamHub"/>
    	<property name="bootstrapServers" value="${streamhub.config.bootstrapservers:localhost:9092}"/>
    	<property name="zookeeperConnect" value="${streamhub.config.zookeeperconnect:localhost:2181}"/>
    	<property name="clientId">
    		<util:constant static-field="com.heliosapm.streams.metrics.router.config.StreamsConfigBuilder.DEFAULT_CLIENT_ID" />
    	</property>
    	<property name="pollWaitMs" value="${streamhub.config.pollwaitms:10}"/>
    	<property name="stateStoreDir">
    		<util:constant static-field="com.heliosapm.streams.metrics.router.config.StreamsConfigBuilder.DEFAULT_STATE_STORE_NAME" />
    	</property>
    	<property name="timeExtractor" value="${streamhub.config.timeextractor:com.heliosapm.streams.metrics.TextLineTimestampExtractor}"/>
    	<property name="streamThreads" value="3"/>    	
    	<property name="monitoringInterceptorEnabled" value="${streamhub.config.streams.monitorinterceptor:true}"/>
    </bean>
    
    
    <!-- 
    <bean id="streamsConfigProperties" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
  		<property name="targetObject" ref="streamsConfig" />
  		<property name="targetMethod" value="buildProperties" />
	</bean>
	-->


</beans>