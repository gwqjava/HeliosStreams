package com.heliosapm.metrichub.speedment.tsdb.public_.tsd_lastsync_fails.generated;

import com.heliosapm.metrichub.speedment.tsdb.public_.tsd_lastsync.TsdLastsync;
import com.heliosapm.metrichub.speedment.tsdb.public_.tsd_lastsync_fails.TsdLastsyncFails;
import com.speedment.runtime.core.manager.Manager;
import java.sql.Timestamp;
import java.util.Objects;
import java.util.StringJoiner;
import javax.annotation.Generated;

/**
 * The generated base implementation of the {@link
 * com.heliosapm.metrichub.speedment.tsdb.public_.tsd_lastsync_fails.TsdLastsyncFails}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public abstract class GeneratedTsdLastsyncFailsImpl implements TsdLastsyncFails {
    
    private String tableName;
    private String objectId;
    private int attempts;
    private Timestamp lastAttempt;
    
    protected GeneratedTsdLastsyncFailsImpl() {
        
    }
    
    @Override
    public String getTableName() {
        return tableName;
    }
    
    @Override
    public String getObjectId() {
        return objectId;
    }
    
    @Override
    public int getAttempts() {
        return attempts;
    }
    
    @Override
    public Timestamp getLastAttempt() {
        return lastAttempt;
    }
    
    @Override
    public TsdLastsyncFails setTableName(String tableName) {
        this.tableName = tableName;
        return this;
    }
    
    @Override
    public TsdLastsyncFails setObjectId(String objectId) {
        this.objectId = objectId;
        return this;
    }
    
    @Override
    public TsdLastsyncFails setAttempts(int attempts) {
        this.attempts = attempts;
        return this;
    }
    
    @Override
    public TsdLastsyncFails setLastAttempt(Timestamp lastAttempt) {
        this.lastAttempt = lastAttempt;
        return this;
    }
    
    @Override
    public TsdLastsync findTableName(Manager<TsdLastsync> foreignManager) {
        return foreignManager.stream().filter(TsdLastsync.TABLE_NAME.equal(getTableName())).findAny().orElse(null);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("tableName = " + Objects.toString(getTableName()));
        sj.add("objectId = " + Objects.toString(getObjectId()));
        sj.add("attempts = " + Objects.toString(getAttempts()));
        sj.add("lastAttempt = " + Objects.toString(getLastAttempt()));
        return "TsdLastsyncFailsImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof TsdLastsyncFails)) { return false; }
        final TsdLastsyncFails thatTsdLastsyncFails = (TsdLastsyncFails)that;
        if (!Objects.equals(this.getTableName(), thatTsdLastsyncFails.getTableName())) {return false; }
        if (!Objects.equals(this.getObjectId(), thatTsdLastsyncFails.getObjectId())) {return false; }
        if (this.getAttempts() != thatTsdLastsyncFails.getAttempts()) {return false; }
        if (!Objects.equals(this.getLastAttempt(), thatTsdLastsyncFails.getLastAttempt())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(getTableName());
        hash = 31 * hash + Objects.hashCode(getObjectId());
        hash = 31 * hash + Integer.hashCode(getAttempts());
        hash = 31 * hash + Objects.hashCode(getLastAttempt());
        return hash;
    }
}